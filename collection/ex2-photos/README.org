:PROPERTIES:
:header-args:    :exports both :eval no-export :cache yes
:END:

#+LINK: fin https://github.com/UCDavisLibrary/fin-server
#+LINK: fin-cli https://github.com/UCDavisLibrary/fin-cli
#+LINK: Fedora-LDP https://fedora.info/spec/
#+LINK: schema https://schema.org/

* Example 2 - Photographs

This example, drawn from our Eastman collection, contains digitized versions of
some historical photographs.  In this case, the items in the collection
represent physical items -- the photographs --, and we are displaying digital
versions of these photographs for our users.

In
with a small amount of data about the pets. Each pet, eg. [[./ashley.jpg][ashley.jpg]] is included
in their own image file, and each image file has some associated metadata in a
~.ttl~ sidecar, eg. [[./ashley.jpeg.ttl][ashley.jpeg.ttl]]. The metadata is in ~text/turtle~ format.
The [[./index.ttl][index.ttl]] file includes information about the collection as a whole.
Finally, we have an additional [[./graph.hdt][graph.hdt]] file is explained in more detail below.

** Object Structure

We continue to use [[schema][Schema.org]] to organize these items.  To
that end, Every collection is defined as a [[schema:Collection][schema:Collection]] and every item in a
collection is a [[schema:CreativeWork][schema:creativework]]. the items of a collection are defined with
the property [[schema:haspart][schema:haspart]]. this is fundamental organization of a collection.
this [[./docs/generic_diagram.png][generic diagram]], describes that relationship. since [[schema:collection][schema:collection]] are
themselves [[schema:creativework][creativework]] then all properties of those apply. some of the
properties that are indexed and in some cases faceted in our dams include [[schema:name][name]],
[[schema:about][about]], [[schema:keywords][keywords]], [[schema:alternativeheadline][alternativeheadline]],[[schema:license][license]],[[schema:creator][creator]], [[schema::datepublished][datepublished]]


#+begin_src plantuml  :file ./docs/generic_diagram.png
    @startuml

    object "schema:collection" as scol {
  }

    object "schema:creativework" as scw {
 schema:name "text";
 schema:alternativeheadline "text";
 schema:keywords "text";
 schema:license <link>;
 schema:about <link>;
 schema:creator "text" or <link>;
 schema:datepublished "text".
  }

    object "/collections" as collections {
         name = "example repository"
    }

    collections o-- scol
    scol "haspart" o-- "ispartof" scw

      @enduml
#+end_src

#+results:
[[file:./docs/generic_diagram.png]]

now, for our example, each individual pet is an item within our collection.  the
following diagram replaces the generic objects with some of the actual objects
in our collection. The corresponding metadata files are [[index.ttl]], [[ashley.ttl]], and [[mochi.ttl]].

#+BEGIN_SRC plantuml  :file ./docs/diagram.png
  @startuml

  object "schema:Collection" as sCol
  object "schema:ImageObject" as sImage

  object "/collections" as Collections {
			 schema:name = "Example Repository"
  }

  object "Collaborator Pets" as Pets {
  schema:name ="Collaborator Pets"
  schema:keywords ="Pets", "Cats", "Dogs"
  schema:license = <http://rightsstatements.org/vocab/InC-NC/1.0/>
  schema:creator ="Quinn Hart";
  schema:datePublished ="2018"
  schema:description ="This collection ..."
  }

  object Ashley {
 schema:name "Ashley";
 schema:alternativeHeadline "Why do I need ...";
 schema:keywords "Cat";
 schema:license <http://rightsstatements.org/vocab/InC-NC/1.0/>;
 schema:about <http://en.wikipedia.org/wiki/Cat>;
 schema:creator "Quinn Hart";
 schema:datePublished "2015"^^<http://www.w3.org/2001/XMLSchema#date> ;
 my:owner "Quinn Hart".
  }

  object Mochi {
 schema:name "Mochi";
 schema:alternativeHeadline "Two rubs exactly..";
 schema:keywords "Cat";
 schema:license <http://rightsstatements.org/vocab/InC-NC/1.0/>;
 schema:about <http://en.wikipedia.org/wiki/Cat>;
 schema:creator "Kimmy Hescock";
 schema:datePublished "2008"^^<http://www.w3.org/2001/XMLSchema#date> ;
 my:owner "Kimmy Hescock".
  }

  Collections "hasPart" o-- "isPartOf" Pets
  Pets "a  " <|-- sCol
  Pets "hasPart" o-- "isPartOf" Ashley
  Pets "hasPart" o-- "isPartOf" Mochi
  Mochi "a  " <|-- sImage
  Ashley "a  " <|-- sImage

    @enduml
#+END_SRC

#+RESULTS:
[[file:./docs/diagram.png]]
